
&НаКлиенте
Процедура Сформировать(Команда)

	ТабДок = СформироватьТабличныйДокумент(ДатаОтчета, ВариантВыводаОтчета);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СформироватьТабличныйДокумент(парДата, ВариантВывода)
	
	ТабДок = Новый ТабличныйДокумент;
	
	Если ВариантВывода = Перечисления.ВариантыВыводаОтчетов.ПоЗаказам Тогда
		
		Макет = Отчеты.КомплектующиеВСборке_БезСКД.ПолучитьМакет("МакетЗаказ");
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КомплектющиеВСборкеОстатки.Заказ КАК Заказ,
		|	ПРЕДСТАВЛЕНИЕ(КомплектющиеВСборкеОстатки.Заказ),
		|	КомплектющиеВСборкеОстатки.Комплектующая КАК Комплектующая,
		|	ПРЕДСТАВЛЕНИЕ(КомплектющиеВСборкеОстатки.Комплектующая),
		|	КомплектющиеВСборкеОстатки.КоличествоОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.КомплектющиеВСборке.Остатки(&ДатаОтчета, ) КАК КомплектющиеВСборкеОстатки
		|ИТОГИ
		|	СУММА(Количество)
		|ПО
		|	Заказ";
		
		Запрос.УстановитьПараметр("ДатаОтчета", Новый Граница(КонецДня(парДата), ВидГраницы.Включая));
		
		Результат = Запрос.Выполнить();
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
		ОбластьЗаказ = Макет.ПолучитьОбласть("Заказ");
		ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
		
		ТабДок.Очистить();
		ТабДок.Вывести(ОбластьЗаголовок);
		ТабДок.Вывести(ОбластьШапкаТаблицы);
		ТабДок.НачатьАвтогруппировкуСтрок();
		
		ВыборкаЗаказ = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаЗаказ.Следующий() Цикл
			ОбластьЗаказ.Параметры.Заполнить(ВыборкаЗаказ);
			ТабДок.Вывести(ОбластьЗаказ, ВыборкаЗаказ.Уровень());
			
			ВыборкаДетальныеЗаписи = ВыборкаЗаказ.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
				ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
			КонецЦикла;
		КонецЦикла;
		
		ТабДок.ЗакончитьАвтогруппировкуСтрок();
		ТабДок.Вывести(ОбластьПодвалТаблицы);
		ТабДок.Вывести(ОбластьПодвал);
		
		
	ИначеЕсли ВариантВывода = Перечисления.ВариантыВыводаОтчетов.ПоКомплектующим Тогда
		
		Макет = Отчеты.КомплектующиеВСборке_БезСКД.ПолучитьМакет("МакетКомплектующая");
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КомплектющиеВСборкеОстатки.Заказ,
		|	ПРЕДСТАВЛЕНИЕ(КомплектющиеВСборкеОстатки.Заказ),
		|	КомплектющиеВСборкеОстатки.Комплектующая КАК Комплектующая,
		|	ПРЕДСТАВЛЕНИЕ(КомплектющиеВСборкеОстатки.Комплектующая),
		|	КомплектющиеВСборкеОстатки.КоличествоОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.КомплектющиеВСборке.Остатки(&ДатаОтчета, ) КАК КомплектющиеВСборкеОстатки
		|ИТОГИ
		|	СУММА(Количество)
		|ПО
		|	Комплектующая";
		
		Запрос.УстановитьПараметр("ДатаОтчета", Новый Граница(КонецДня(парДата), ВидГраницы.Включая));
		
		Результат = Запрос.Выполнить();
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
		ОбластьКомплектующая = Макет.ПолучитьОбласть("Комплектующая");
		ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
		
		ТабДок.Очистить();
		ТабДок.Вывести(ОбластьЗаголовок);
		ТабДок.Вывести(ОбластьШапкаТаблицы);
		ТабДок.НачатьАвтогруппировкуСтрок();
		
		ВыборкаКомплектующая = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаКомплектующая.Следующий() Цикл
			ОбластьКомплектующая.Параметры.Заполнить(ВыборкаКомплектующая);
			ТабДок.Вывести(ОбластьКомплектующая, ВыборкаКомплектующая.Уровень());
			
			ВыборкаДетальныеЗаписи = ВыборкаКомплектующая.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
				ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
			КонецЦикла;
		КонецЦикла;
		
		ТабДок.ЗакончитьАвтогруппировкуСтрок();
		ТабДок.Вывести(ОбластьПодвалТаблицы);
		ТабДок.Вывести(ОбластьПодвал);
		
		//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
		
		
	КонецЕсли;
	
	Возврат ТабДок;
	
КонецФункции


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДатаОтчета = ТекущаяДата();
	
	ВариантВыводаОтчета = Перечисления.ВариантыВыводаОтчетов.ПоКомплектующим;
	
КонецПроцедуры

